name: Solar System Workflow

on: 
  workflow_dispatch:
  push:
    branches:
      - main
      - 'feature/*'
 
env:
  MONGO_URI: 'mongodb+srv://supercluster.d83jj.mongodb.net/superData'
  MONGO_USERNAME: ${{ vars.MONGO_USERNAME }}
  MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}      
jobs:
    unit-testing:

        name: Unit Testing
        strategy:
          matrix:
            os: [ubuntu-latest]
            nodejs_version: [18,19,20]
            exclude:
            - nodejs_version: 18
              os: macos-latest

        runs-on: ${{ matrix.os }}
        steps:
        - name: Checkout Repository
          uses: actions/checkout@v4

        - name: Setup NodeJS Version - ${{ matrix.nodejs_version }}
          uses: actions/setup-node@v3
          with:
            node-version: ${{ matrix.nodejs_version }}

        - name: Init Caching
          uses: actions/cache@v4
          id: npm-cache # use this to check for `cache-hit` ==> if: steps.npm-cache.outputs.cache-hit != 'true'
          with:
              path: node_modules
              key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}       

        - name: Install Dependencies
          run: npm install
    
        - name: Unit Testing
          id: node-init-testing-step
          run: npm test
          
        - name: Archive Test Result
          if: always()
          uses: actions/upload-artifact@v4
          with:
            name: Mocha-Test-Result-${{ matrix.os }}-${{ matrix.nodejs_version }}
            path: test-results.xml

    code-coverage:

        name: Code Coverage

        runs-on: ubuntu-latest
        steps:
        - name: Checkout Repository
          uses: actions/checkout@v4

        - name: Setup NodeJS Version - 18
          uses: actions/setup-node@v3
          with:
            node-version: 18

        - name: Init Caching
          uses: actions/cache@v4
          id: npm-cache # use this to check for `cache-hit` ==> if: steps.npm-cache.outputs.cache-hit != 'true'
          with:
              path: node_modules
              key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}            
        - name: Install Dependencies
          run: npm install
    
        - name: Check Code Coverage
          continue-on-error: true
          run: npm run coverage
          
        - name: Archive Test Results
          uses: actions/upload-artifact@v4
          with:
            name: Code-Coverage-Results
            path: coverage
            retention-days: 5
            
    docker:

        name: Containerization
        needs: [unit-testing, code-coverage]
        runs-on: ubuntu-latest
        steps:
        - name: Checkout Repository
          uses: actions/checkout@v4

        - name:  DockerHub Login
          uses: docker/login-action@v3
          with:
            username: ${{ vars.DOCKERHUB_USERNAME }}
            password: ${{ secrets.DOCKERHUB_TOKEN }} 
            
        - name: Build and push
          uses: docker/build-push-action@v6
          with:
            context: .
            push: false
            tags: trackercanada/solar-system:${{ github.sha }}
            
        - name: Docker Image Test
          run: |
            docker images
            docker run --name solar-system-app -d \
              - p 3000:3000 \
              -e MANGO_URI=$MANGO_URI \
              -e MANGO_USERNAME=$MANGO_USERNAMME \ 
              -e MANGO_PASSWORD=$MANGO_PASSWORD \
              trackercanada/solar-system:${{ github.sha }}

            export IP=(docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' solar-system-app)
            echo $IP

            echo Testing Image URI using wget
            wget -q -O - 127.0.0.1:3000/live | grep live
                